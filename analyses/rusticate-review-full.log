RUSTICATE COMPREHENSIVE REVIEW - ALL TOOLS
===========================================


=== Running bench-modules ===
✓ All benchmark modules compile successfully
Completed in 422ms

=== Running comment-placement ===
Entering directory 'src/bin'

No comment placement issues found.
Completed in 1ms

=== Running doctests ===
Entering directory 'src/bin'

✓ All doctests parse correctly

Summary: 0 doctest(s) failed
Completed in 0ms

=== Running duplicate-bench-names ===
✓ All 0 benchmark names are unique in Cargo.toml
Completed in 0ms

=== Running duplicate-methods ===
================================================================================
DUPLICATE METHODS REVIEW
================================================================================

✓ No duplicate methods found!
================================================================================
SUMMARY:
  Total files with duplicates: 0
  Total duplicate names: 0

Completed in 1ms

=== Running impl-order ===
Entering directory 'src/bin'

✓ No src/ directories to check
Completed in 0ms

=== Running impl-trait-bounds ===
INHERENT IMPL BLOCKS WITH TRAIT BOUNDS COMPARISON
================================================================================

================================================================================
SUMMARY
================================================================================
Total impl blocks with generics: 0
  With trait definitions: 0
  Without trait definitions: 0

Completed in 0ms

=== Running import-order ===
Entering directory 'src/bin'

✗ Found 4 violation(s) (RustRules.md Lines 50, 75-86):

count_as.rs:13: std import after external imports
  use std::fs;
count_as.rs:13: missing blank line between External and Std imports
  use std::fs;
count_vec.rs:13: std import after external imports
  use std::fs;
count_vec.rs:13: missing blank line between External and Std imports
  use std::fs;

Summary: 2 files checked, 2 files with violations, 4 total violations
Completed in 1ms
Warning: import-order exited with status exit status: 1

=== Running inherent-and-trait-impl ===
Entering directory 'src/bin'


✓ No issues found in 2 file(s)
Completed in 1ms

=== Running inherent-plus-trait-impl ===

✓ All structs use trait impl only (no inherent+trait duplication)!

Completed in 0ms

=== Running integration-test-structure ===
Entering directory 'src/bin'

✓ No tests/ directory found
Completed in 0ms

=== Running internal-method-impls ===
Entering directory 'src/bin'

✓ No problematic inherent impls found in 2 file(s)
Completed in 0ms

=== Running logging ===
Partial logging:
  src/bin/count_as.rs: missing analyses/ logging
  src/bin/count_vec.rs: missing analyses/ logging

Summary: 2 files checked, 0 with complete logging, 2 with issues
Completed in 1ms

=== Running minimize-ufcs-call-sites ===
Entering directory 'src/bin'
✓ No UFCS at call sites (outside impl/trait)
Summary: 2 files checked, 0 files with violations, 0 total violations
Completed in 1ms

=== Running module-encapsulation ===
Entering directory 'src/bin'

✓ No src/ directories to check
Completed in 0ms

=== Running no-extern-crate ===
Entering directory 'src/bin'

✓ No 'extern crate' usage found

Summary: 2 files checked, 0 files with violations, 0 total violations
Completed in 1ms

=== Running non-wildcard-uses ===
================================================================================
PARETO: BY VIOLATION TYPE
================================================================================
0      (  0.0%, cumulative   0.0%): (!) BOGUS top-level wildcard
0      (  0.0%, cumulative   0.0%): (a) single trait import
0      (  0.0%, cumulative   0.0%): (b) single function import
0      (  0.0%, cumulative   0.0%): (c) single type import

================================================================================
PARETO: BY DIRECTORY
================================================================================
0      (  0.0%, cumulative   0.0%): benches [!:0, a:0, b:0, c:0]
0      (  0.0%, cumulative   0.0%): src [!:0, a:0, b:0, c:0]
0      (  0.0%, cumulative   0.0%): tests [!:0, a:0, b:0, c:0]

--------------------------------------------------------------------------------
Total non-wildcard uses: 0
Files affected: 0/2

✓ All apas_ai imports use wildcard imports
Completed in 1ms

=== Running no-trait-method-duplication ===
✓ No Trait Method Duplication: PASS

Completed in 1ms

=== Running pascal-case-filenames ===
Entering directory 'src/bin'

✗ Found 2 violation(s):

count_as.rs:1: File 'count_as.rs' uses snake_case (underscore), should be PascalCase
count_vec.rs:1: File 'count_vec.rs' uses snake_case (underscore), should be PascalCase

Summary: 2 files checked, 2 files with violations
Completed in 0ms
Warning: pascal-case-filenames exited with status exit status: 1

=== Running public-only-inherent-impls ===
Entering directory 'src/bin'

✓ No public-only inherent impls found in 2 file(s)
Completed in 1ms

=== Running qualified-paths ===
✓ Qualified Path Organization: No violations found (RustRules.md)

Completed in 0ms

=== Running redundant-inherent-impls ===
No redundant inherent impls found.

=== Running single-trait-impl ===
Entering directory 'src/bin'

✓ No src/ directories to check
Completed in 0ms

=== Running snake-case-filenames ===
Entering directory 'src/bin'

✓ All files follow snake_case naming convention

Summary: 2 files checked, 0 files with violations
Completed in 0ms

=== Running st-mt-consistency ===
✓ St/Mt Consistency: All files properly implement single/multi-threading

Completed in 0ms

=== Running string-hacking ===
Entering directory 'src/bin/count_as.rs'


Total violations: 2 files checked, 0 violations found

Completed in 1ms

=== Running struct-file-naming ===
Entering directory 'src/bin'

✓ Struct/File Naming: No violations found

Summary: 2 files checked, 0 violations
Completed in 1ms

=== Running stt-compliance ===
Analyzing 0 source files for StT compliance...
================================================================================

StT requirements: Eq + Clone + Display + Debug + Sized


✓ All public structs satisfy StT requirements!

Completed in 0ms

=== Running stub-delegation ===
Entering directory 'src/bin'

✓ No stub delegation found in 2 file(s)
Completed in 1ms

=== Running test-modules ===
✓ All test modules compile successfully
Completed in 689ms

=== Running trait-bound-mismatches ===
Entering directory 'src/bin'

✓ No src/ directories to check
Completed in 0ms

=== Running trait-definition-order ===
✓ All trait definitions are in correct order

Completed in 1ms

=== Running trait-method-conflicts ===
Analyzing 33 test/benchmark files for trait method conflicts...
================================================================================

✓ No trait method conflicts detected!
All test/benchmark files are safe for trait default implementation refactor.

Completed in 13ms

=== Running trait-self-usage ===
Reviewing 2 Rust files for trait Self usage...
✓ Trait Self Usage: No violations found

Completed in 1ms

=== Running typeclasses ===
Entering directory 'src/bin'

count_as.rs:1: missing module - BUG
count_as.rs:1:	no pub data type (struct, enum, or type alias) - BUG
count_as.rs:1:	no pub trait - BUG
count_as.rs:1:	no Trait impl - BUG
count_as.rs:1:	no duplicate method names
count_as.rs:1:	no fixes known
count_as.rs:1:	Module summary: 4 BUGs, 0 WARNINGs, 0 OKs, 0 fixes

count_vec.rs:1: missing module - BUG
count_vec.rs:1:	no pub data type (struct, enum, or type alias) - BUG
count_vec.rs:1:	no pub trait - BUG
count_vec.rs:1:	no Trait impl - BUG
count_vec.rs:1:	no duplicate method names
count_vec.rs:1:	no fixes known
count_vec.rs:1:	Module summary: 4 BUGs, 0 WARNINGs, 0 OKs, 0 fixes

================================================================================
SUMMARY:
  Total modules analyzed: 2
  Clean modules (no bugs or warnings): 0
  Modules with no known fixes: 2
  Total OKs: 0
  Total WARNINGs: 0
  Total BUGs: 8
  Total fixes recommended: 0

================================================================================
PARETO ANALYSIS: BUGS
================================================================================
2      ( 25.0%, cumulative  25.0%): no pub trait
2      ( 25.0%, cumulative  50.0%): no Trait impl
2      ( 25.0%, cumulative  75.0%): missing module
2      ( 25.0%, cumulative 100.0%): no pub data type (struct, enum, or type alias)
0      (  0.0%, cumulative 100.0%): method with unused self parameter
0      (  0.0%, cumulative 100.0%): inherent impl with pub methods
0      (  0.0%, cumulative 100.0%): inherent impl with only internal methods/functions
0      (  0.0%, cumulative 100.0%): duplicate method
--------------------------------------------------------------------------------
TOTAL BUGS: 8

Completed in 2ms
Warning: typeclasses exited with status exit status: 1

=== Running variable-naming ===
Entering directory 'src/bin'

✓ No src/ directories to check
Completed in 0ms

=== Running where-clause-simplification ===
Entering directory 'src/bin'

✓ No src/ directories to check
Completed in 0ms

===========================================
SUMMARY: Ran 37 review tools
All tools completed successfully
===========================================

Completed in 1197ms

=== Running bench-modules ===

=== Running string-hacking ===
Entering directory 'tests/test_review_dispatcher.rs'


Total violations: 1 files checked, 0 violations found

Completed in 0ms

Completed in 2ms

=== Running logging ===
Missing logging:
  src/bin/review_test_functions.rs: No logging

Partial logging:
  src/bin/review_integration_test_structure.rs: missing analyses/ logging
  src/bin/compile_and_test.rs: missing analyses/ logging
  src/bin/rusticate.rs: missing analyses/ logging, missing std::fs import
  src/bin/review_comment_placement.rs: missing analyses/ logging
  src/bin/compile.rs: missing analyses/ logging
  src/bin/review_no_trait_method_duplication.rs: missing analyses/ logging, missing std::fs import
  src/bin/review_single_trait_impl.rs: missing analyses/ logging
  src/bin/fix_unnecessary_ufcs.rs: missing analyses/ logging
  src/bin/review_snake_case_filenames.rs: missing analyses/ logging, missing std::fs import
  src/bin/review_bench_modules.rs: missing analyses/ logging, missing std::fs import
  src/bin/fix.rs: missing analyses/ logging, missing std::fs import
  src/bin/review_string_hacking.rs: missing analyses/ logging
  src/bin/fix_logging.rs: missing analyses/ logging
  src/bin/review_duplicate_methods.rs: missing analyses/ logging, missing std::fs import
  src/bin/review_min_typing.rs: missing analyses/ logging
  src/bin/fix_test_trait_imports.rs: missing analyses/ logging
  src/bin/review_unnecessary_ufcs_and_qualified_paths.rs: missing analyses/ logging
  src/bin/review_logging.rs: missing analyses/ logging
  src/bin/review_inherent_plus_trait_impl.rs: missing analyses/ logging, missing std::fs import
  src/bin/review_merge_imports.rs: missing analyses/ logging
  src/bin/review_trait_definition_order.rs: missing analyses/ logging, missing std::fs import
  src/bin/fix_non_wildcard_uses.rs: missing analyses/ logging
  src/bin/review_doctests.rs: missing analyses/ logging
  src/bin/fix_merge_imports.rs: missing analyses/ logging
  src/bin/fix_grouped_imports.rs: missing analyses/ logging
  src/bin/review_duplicate_bench_names.rs: missing analyses/ logging
  src/bin/fix_chap18_chap19_both.rs: missing analyses/ logging
  src/bin/review_import_order.rs: missing analyses/ logging
  src/bin/fix_chap18_to_chap19_per.rs: missing analyses/ logging
  src/bin/fix_no_pub_type.rs: missing analyses/ logging
  src/bin/fix_duplicate_methods.rs: missing analyses/ logging
  src/bin/review_pascal_case_filenames.rs: missing analyses/ logging, missing std::fs import
  src/bin/review_st_mt_consistency.rs: missing analyses/ logging, missing std::fs import
  src/bin/review_stt_compliance.rs: missing analyses/ logging, missing std::fs import
  src/bin/fix_min_typing.rs: missing analyses/ logging
  src/bin/review_summary_accuracy.rs: missing analyses/ logging
  src/bin/fix_chap18_to_chap19.rs: missing analyses/ logging
  src/bin/review_test_modules.rs: missing analyses/ logging, missing std::fs import
  src/bin/compile_src_tests_benches_run_tests.rs: missing analyses/ logging, missing std::fs import
  src/bin/review_impl_order.rs: missing analyses/ logging
  src/bin/review_impl_trait_bounds.rs: missing analyses/ logging, missing std::fs import
  src/bin/review_internal_method_impls.rs: missing analyses/ logging
  src/bin/review_inherent_and_transitive_mt.rs: missing analyses/ logging
  src/bin/review_struct_file_naming.rs: missing analyses/ logging
  src/bin/review_typeclasses.rs: missing analyses/ logging
  src/bin/fix_stub_delegation.rs: missing analyses/ logging
  src/bin/review_trait_self_usage.rs: missing analyses/ logging, missing std::fs import
  src/bin/analyze_review_typeclasses.rs: missing analyses/ logging, missing std::fs import
  src/bin/review_chap18_chap19.rs: missing analyses/ logging
  src/bin/review_module_encapsulation.rs: missing analyses/ logging
  src/bin/count_where.rs: missing analyses/ logging
  src/bin/review_variable_naming.rs: missing analyses/ logging
  src/bin/review_simplifiable_ufcs.rs: missing analyses/ logging
  src/bin/fix_duplicate_method_call_sites.rs: missing analyses/ logging
  src/bin/fix_import_order.rs: missing analyses/ logging
  src/bin/count_vec.rs: missing analyses/ logging
  src/bin/review_non_wildcard_uses.rs: missing analyses/ logging
  src/bin/review.rs: missing analyses/ logging
  src/bin/parse.rs: missing analyses/ logging, missing std::fs import
  src/bin/review_where_clause_simplification.rs: missing analyses/ logging
  src/bin/review_redundant_inherent_impls.rs: missing analyses/ logging, missing std::fs import
  src/bin/fix_doctests.rs: missing analyses/ logging
  src/bin/review_trait_method_conflicts.rs: missing analyses/ logging, missing std::fs import
  src/bin/review_minimize_ufcs_call_sites.rs: missing analyses/ logging
  src/bin/review_qualified_paths.rs: missing analyses/ logging, missing std::fs import
  src/bin/review_trait_bound_mismatches.rs: missing analyses/ logging
  src/bin/review_inherent_and_trait_impl.rs: missing analyses/ logging
  src/bin/review_public_only_inherent_impls.rs: missing analyses/ logging
  src/bin/count_loc.rs: missing analyses/ logging
  src/bin/review_stub_delegation.rs: missing analyses/ logging
  src/bin/review_no_extern_crate.rs: missing analyses/ logging
  src/bin/count_as.rs: missing analyses/ logging
  src/bin/review_mt_per.rs: missing analyses/ logging
  src/bin/review_grouped_imports.rs: missing analyses/ logging
  src/bin/fix_our_uses_to_wildcards.rs: missing analyses/ logging

Summary: 76 files checked, 0 with complete logging, 76 with issues
Completed in 158ms

Completed in 160ms
✓ All benchmark modules compile successfully
Completed in 244ms

Completed in 245ms

=== Running comment-placement ===
Usage: rusticate-review-comment-placement [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-comment-placement                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-comment-placement -c                        # Same as above
  rusticate-review-comment-placement -d src tests benches      # Analyze multiple directories
  rusticate-review-comment-placement -d src                    # Analyze just src/
  rusticate-review-comment-placement -f src/lib.rs             # Analyze single file
  rusticate-review-comment-placement -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running doctests ===
Usage: rusticate-review-doctests [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-doctests                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-doctests -c                        # Same as above
  rusticate-review-doctests -d src tests benches      # Analyze multiple directories
  rusticate-review-doctests -d src                    # Analyze just src/
  rusticate-review-doctests -f src/lib.rs             # Analyze single file
  rusticate-review-doctests -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 2ms

=== Running duplicate-bench-names ===
✓ All 0 benchmark names are unique in Cargo.toml
Completed in 0ms

Completed in 2ms

=== Running duplicate-methods ===
Usage: rusticate-review-duplicate-methods [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-duplicate-methods                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-duplicate-methods -c                        # Same as above
  rusticate-review-duplicate-methods -d src tests benches      # Analyze multiple directories
  rusticate-review-duplicate-methods -d src                    # Analyze just src/
  rusticate-review-duplicate-methods -f src/lib.rs             # Analyze single file
  rusticate-review-duplicate-methods -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running impl-order ===
Usage: rusticate-review-impl-order [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-impl-order                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-impl-order -c                        # Same as above
  rusticate-review-impl-order -d src tests benches      # Analyze multiple directories
  rusticate-review-impl-order -d src                    # Analyze just src/
  rusticate-review-impl-order -f src/lib.rs             # Analyze single file
  rusticate-review-impl-order -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running impl-trait-bounds ===
Usage: rusticate-review-impl-trait-bounds [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-impl-trait-bounds                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-impl-trait-bounds -c                        # Same as above
  rusticate-review-impl-trait-bounds -d src tests benches      # Analyze multiple directories
  rusticate-review-impl-trait-bounds -d src                    # Analyze just src/
  rusticate-review-impl-trait-bounds -f src/lib.rs             # Analyze single file
  rusticate-review-impl-trait-bounds -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running import-order ===
Usage: rusticate-review-import-order [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-import-order                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-import-order -c                        # Same as above
  rusticate-review-import-order -d src tests benches      # Analyze multiple directories
  rusticate-review-import-order -d src                    # Analyze just src/
  rusticate-review-import-order -f src/lib.rs             # Analyze single file
  rusticate-review-import-order -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running inherent-and-trait-impl ===
Usage: rusticate-review-inherent-and-trait-impl [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-inherent-and-trait-impl                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-inherent-and-trait-impl -c                        # Same as above
  rusticate-review-inherent-and-trait-impl -d src tests benches      # Analyze multiple directories
  rusticate-review-inherent-and-trait-impl -d src                    # Analyze just src/
  rusticate-review-inherent-and-trait-impl -f src/lib.rs             # Analyze single file
  rusticate-review-inherent-and-trait-impl -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running inherent-plus-trait-impl ===
Usage: rusticate-review-inherent-plus-trait-impl [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-inherent-plus-trait-impl                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-inherent-plus-trait-impl -c                        # Same as above
  rusticate-review-inherent-plus-trait-impl -d src tests benches      # Analyze multiple directories
  rusticate-review-inherent-plus-trait-impl -d src                    # Analyze just src/
  rusticate-review-inherent-plus-trait-impl -f src/lib.rs             # Analyze single file
  rusticate-review-inherent-plus-trait-impl -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running integration-test-structure ===
Usage: rusticate-review-integration-test-structure [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-integration-test-structure                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-integration-test-structure -c                        # Same as above
  rusticate-review-integration-test-structure -d src tests benches      # Analyze multiple directories
  rusticate-review-integration-test-structure -d src                    # Analyze just src/
  rusticate-review-integration-test-structure -f src/lib.rs             # Analyze single file
  rusticate-review-integration-test-structure -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running internal-method-impls ===
Usage: rusticate-review-internal-method-impls [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-internal-method-impls                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-internal-method-impls -c                        # Same as above
  rusticate-review-internal-method-impls -d src tests benches      # Analyze multiple directories
  rusticate-review-internal-method-impls -d src                    # Analyze just src/
  rusticate-review-internal-method-impls -f src/lib.rs             # Analyze single file
  rusticate-review-internal-method-impls -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running logging ===
Usage: rusticate-review-logging [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-logging                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-logging -c                        # Same as above
  rusticate-review-logging -d src tests benches      # Analyze multiple directories
  rusticate-review-logging -d src                    # Analyze just src/
  rusticate-review-logging -f src/lib.rs             # Analyze single file
  rusticate-review-logging -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running minimize-ufcs-call-sites ===
Usage: rusticate-review-minimize-ufcs-call-sites [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-minimize-ufcs-call-sites                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-minimize-ufcs-call-sites -c                        # Same as above
  rusticate-review-minimize-ufcs-call-sites -d src tests benches      # Analyze multiple directories
  rusticate-review-minimize-ufcs-call-sites -d src                    # Analyze just src/
  rusticate-review-minimize-ufcs-call-sites -f src/lib.rs             # Analyze single file
  rusticate-review-minimize-ufcs-call-sites -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running module-encapsulation ===
Usage: rusticate-review-module-encapsulation [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-module-encapsulation                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-module-encapsulation -c                        # Same as above
  rusticate-review-module-encapsulation -d src tests benches      # Analyze multiple directories
  rusticate-review-module-encapsulation -d src                    # Analyze just src/
  rusticate-review-module-encapsulation -f src/lib.rs             # Analyze single file
  rusticate-review-module-encapsulation -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running no-extern-crate ===
Usage: rusticate-review-no-extern-crate [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-no-extern-crate                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-no-extern-crate -c                        # Same as above
  rusticate-review-no-extern-crate -d src tests benches      # Analyze multiple directories
  rusticate-review-no-extern-crate -d src                    # Analyze just src/
  rusticate-review-no-extern-crate -f src/lib.rs             # Analyze single file
  rusticate-review-no-extern-crate -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running non-wildcard-uses ===
Usage: rusticate-review-non-wildcard-uses [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-non-wildcard-uses                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-non-wildcard-uses -c                        # Same as above
  rusticate-review-non-wildcard-uses -d src tests benches      # Analyze multiple directories
  rusticate-review-non-wildcard-uses -d src                    # Analyze just src/
  rusticate-review-non-wildcard-uses -f src/lib.rs             # Analyze single file
  rusticate-review-non-wildcard-uses -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running no-trait-method-duplication ===
Usage: rusticate-review-no-trait-method-duplication [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-no-trait-method-duplication                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-no-trait-method-duplication -c                        # Same as above
  rusticate-review-no-trait-method-duplication -d src tests benches      # Analyze multiple directories
  rusticate-review-no-trait-method-duplication -d src                    # Analyze just src/
  rusticate-review-no-trait-method-duplication -f src/lib.rs             # Analyze single file
  rusticate-review-no-trait-method-duplication -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running pascal-case-filenames ===
Usage: rusticate-review-pascal-case-filenames [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-pascal-case-filenames                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-pascal-case-filenames -c                        # Same as above
  rusticate-review-pascal-case-filenames -d src tests benches      # Analyze multiple directories
  rusticate-review-pascal-case-filenames -d src                    # Analyze just src/
  rusticate-review-pascal-case-filenames -f src/lib.rs             # Analyze single file
  rusticate-review-pascal-case-filenames -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 2ms

=== Running public-only-inherent-impls ===
Usage: rusticate-review-public-only-inherent-impls [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-public-only-inherent-impls                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-public-only-inherent-impls -c                        # Same as above
  rusticate-review-public-only-inherent-impls -d src tests benches      # Analyze multiple directories
  rusticate-review-public-only-inherent-impls -d src                    # Analyze just src/
  rusticate-review-public-only-inherent-impls -f src/lib.rs             # Analyze single file
  rusticate-review-public-only-inherent-impls -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 2ms

=== Running qualified-paths ===
Usage: rusticate-review-qualified-paths [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-qualified-paths                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-qualified-paths -c                        # Same as above
  rusticate-review-qualified-paths -d src tests benches      # Analyze multiple directories
  rusticate-review-qualified-paths -d src                    # Analyze just src/
  rusticate-review-qualified-paths -f src/lib.rs             # Analyze single file
  rusticate-review-qualified-paths -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 2ms

=== Running redundant-inherent-impls ===
Usage: rusticate-review-redundant-inherent-impls [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-redundant-inherent-impls                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-redundant-inherent-impls -c                        # Same as above
  rusticate-review-redundant-inherent-impls -d src tests benches      # Analyze multiple directories
  rusticate-review-redundant-inherent-impls -d src                    # Analyze just src/
  rusticate-review-redundant-inherent-impls -f src/lib.rs             # Analyze single file
  rusticate-review-redundant-inherent-impls -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 2ms

=== Running single-trait-impl ===
Usage: rusticate-review-single-trait-impl [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-single-trait-impl                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-single-trait-impl -c                        # Same as above
  rusticate-review-single-trait-impl -d src tests benches      # Analyze multiple directories
  rusticate-review-single-trait-impl -d src                    # Analyze just src/
  rusticate-review-single-trait-impl -f src/lib.rs             # Analyze single file
  rusticate-review-single-trait-impl -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 2ms

=== Running snake-case-filenames ===
Usage: rusticate-review-snake-case-filenames [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-snake-case-filenames                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-snake-case-filenames -c                        # Same as above
  rusticate-review-snake-case-filenames -d src tests benches      # Analyze multiple directories
  rusticate-review-snake-case-filenames -d src                    # Analyze just src/
  rusticate-review-snake-case-filenames -f src/lib.rs             # Analyze single file
  rusticate-review-snake-case-filenames -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running st-mt-consistency ===
Usage: rusticate-review-st-mt-consistency [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-st-mt-consistency                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-st-mt-consistency -c                        # Same as above
  rusticate-review-st-mt-consistency -d src tests benches      # Analyze multiple directories
  rusticate-review-st-mt-consistency -d src                    # Analyze just src/
  rusticate-review-st-mt-consistency -f src/lib.rs             # Analyze single file
  rusticate-review-st-mt-consistency -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 2ms

=== Running string-hacking ===
Usage: rusticate-review-string-hacking [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-string-hacking                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-string-hacking -c                        # Same as above
  rusticate-review-string-hacking -d src tests benches      # Analyze multiple directories
  rusticate-review-string-hacking -d src                    # Analyze just src/
  rusticate-review-string-hacking -f src/lib.rs             # Analyze single file
  rusticate-review-string-hacking -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 3ms

=== Running struct-file-naming ===
Usage: rusticate-review-struct-file-naming [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-struct-file-naming                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-struct-file-naming -c                        # Same as above
  rusticate-review-struct-file-naming -d src tests benches      # Analyze multiple directories
  rusticate-review-struct-file-naming -d src                    # Analyze just src/
  rusticate-review-struct-file-naming -f src/lib.rs             # Analyze single file
  rusticate-review-struct-file-naming -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running stt-compliance ===
Usage: rusticate-review-stt-compliance [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-stt-compliance                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-stt-compliance -c                        # Same as above
  rusticate-review-stt-compliance -d src tests benches      # Analyze multiple directories
  rusticate-review-stt-compliance -d src                    # Analyze just src/
  rusticate-review-stt-compliance -f src/lib.rs             # Analyze single file
  rusticate-review-stt-compliance -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running stub-delegation ===
Usage: rusticate-review-stub-delegation [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-stub-delegation                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-stub-delegation -c                        # Same as above
  rusticate-review-stub-delegation -d src tests benches      # Analyze multiple directories
  rusticate-review-stub-delegation -d src                    # Analyze just src/
  rusticate-review-stub-delegation -f src/lib.rs             # Analyze single file
  rusticate-review-stub-delegation -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running test-modules ===
✓ All test modules compile successfully
Completed in 293ms

Completed in 295ms

=== Running trait-bound-mismatches ===
Usage: rusticate-review-trait-bound-mismatches [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-trait-bound-mismatches                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-trait-bound-mismatches -c                        # Same as above
  rusticate-review-trait-bound-mismatches -d src tests benches      # Analyze multiple directories
  rusticate-review-trait-bound-mismatches -d src                    # Analyze just src/
  rusticate-review-trait-bound-mismatches -f src/lib.rs             # Analyze single file
  rusticate-review-trait-bound-mismatches -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running trait-definition-order ===
Usage: rusticate-review-trait-definition-order [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-trait-definition-order                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-trait-definition-order -c                        # Same as above
  rusticate-review-trait-definition-order -d src tests benches      # Analyze multiple directories
  rusticate-review-trait-definition-order -d src                    # Analyze just src/
  rusticate-review-trait-definition-order -f src/lib.rs             # Analyze single file
  rusticate-review-trait-definition-order -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running trait-method-conflicts ===
Analyzing 33 test/benchmark files for trait method conflicts...
================================================================================

✓ No trait method conflicts detected!
All test/benchmark files are safe for trait default implementation refactor.

Completed in 9ms

Completed in 10ms

=== Running trait-self-usage ===
Usage: rusticate-review-trait-self-usage [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-trait-self-usage                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-trait-self-usage -c                        # Same as above
  rusticate-review-trait-self-usage -d src tests benches      # Analyze multiple directories
  rusticate-review-trait-self-usage -d src                    # Analyze just src/
  rusticate-review-trait-self-usage -f src/lib.rs             # Analyze single file
  rusticate-review-trait-self-usage -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running typeclasses ===
Usage: rusticate-review-typeclasses [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-typeclasses                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-typeclasses -c                        # Same as above
  rusticate-review-typeclasses -d src tests benches      # Analyze multiple directories
  rusticate-review-typeclasses -d src                    # Analyze just src/
  rusticate-review-typeclasses -f src/lib.rs             # Analyze single file
  rusticate-review-typeclasses -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running variable-naming ===
Usage: rusticate-review-variable-naming [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-variable-naming                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-variable-naming -c                        # Same as above
  rusticate-review-variable-naming -d src tests benches      # Analyze multiple directories
  rusticate-review-variable-naming -d src                    # Analyze just src/
  rusticate-review-variable-naming -f src/lib.rs             # Analyze single file
  rusticate-review-variable-naming -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms

=== Running where-clause-simplification ===
Usage: rusticate-review-where-clause-simplification [OPTIONS]

Options:
  -c, --codebase             Analyze src/, tests/, benches/ (default)
  -d, --dir DIR [DIR...]     Analyze specific directories
  -f, --file FILE            Analyze a single file
  -m, --module NAME          Find module in src/ and its tests/benches
  -h, --help                 Show this help message

Examples:
  rusticate-review-where-clause-simplification                           # Analyze codebase (src/, tests/, benches/)
  rusticate-review-where-clause-simplification -c                        # Same as above
  rusticate-review-where-clause-simplification -d src tests benches      # Analyze multiple directories
  rusticate-review-where-clause-simplification -d src                    # Analyze just src/
  rusticate-review-where-clause-simplification -f src/lib.rs             # Analyze single file
  rusticate-review-where-clause-simplification -m ArraySeqStEph          # Analyze module + tests + benches

Completed in 1ms
